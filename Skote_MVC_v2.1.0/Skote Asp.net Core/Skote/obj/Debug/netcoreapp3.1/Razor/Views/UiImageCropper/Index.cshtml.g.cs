#pragma checksum "C:\Users\Palagar\Desktop\themeforest-4i6WPWNG-skote-aspnet-mvc5\Skote_MVC_v2.1.0\Skote Asp.net Core\Skote\Views\UiImageCropper\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "01875973fad66c3ae1fed3122d94cb2a4d933994"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UiImageCropper_Index), @"mvc.1.0.view", @"/Views/UiImageCropper/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"01875973fad66c3ae1fed3122d94cb2a4d933994", @"/Views/UiImageCropper/Index.cshtml")]
    public class Views_UiImageCropper_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/cropperjs/cropper.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/images/small/img-5.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Picture"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/metismenu/metisMenu.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/simplebar/simplebar.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/node-waves/waves.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/lang/jquery.multiLanguage.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/cropperjs/cropper.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/pages/cropperjs.init.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/app.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Palagar\Desktop\themeforest-4i6WPWNG-skote-aspnet-mvc5\Skote_MVC_v2.1.0\Skote Asp.net Core\Skote\Views\UiImageCropper\Index.cshtml"
  
    ViewBag.Title = "Image Cropper";
    ViewBag.pTitle = "Image Cropper";
    ViewBag.pageTitle = "UI Elements";
    Layout = "~/Views/_Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "01875973fad66c3ae1fed3122d94cb2a4d9339947901", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div class=""row"">
    <div class=""col-12"">
        <div class=""card"">
            <div class=""card-body"">
                <h4 class=""card-title mb-4"">Example</h4>
                <div class=""row"">
                    <div class=""col-xl-9"">
                        <!-- <h3>Demo:</h3> -->
                        <div class=""img-container mb-2"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "01875973fad66c3ae1fed3122d94cb2a4d9339949415", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                    </div>
                    <div class=""col-xl-3"">
                        <!-- <h3>Preview:</h3> -->
                        <div class=""docs-preview image-crop-preview clearfix"">
                            <div class=""img-preview preview-lg""></div>
                            <div class=""img-preview preview-md""></div>
                            <div class=""img-preview preview-sm""></div>
                            <div class=""img-preview preview-xs""></div>
                        </div>

                        <!-- <h3>Data:</h3> -->
                        <!-- <h3>Data:</h3> -->
                        <div class=""docs-data"">
                            <div class=""input-group input-group-sm mt-2"">
                                <span class=""input-group-prepend"">
                                    <label class=""input-group-text"" for=""dataX"">X</label>
                                </span>
                                <input typ");
            WriteLiteral(@"e=""text"" class=""form-control"" id=""dataX"" placeholder=""x"">
                                <span class=""input-group-append"">
                                    <span class=""input-group-text"">px</span>
                                </span>
                            </div>
                            <div class=""input-group input-group-sm mt-2"">
                                <span class=""input-group-prepend"">
                                    <label class=""input-group-text"" for=""dataY"">Y</label>
                                </span>
                                <input type=""text"" class=""form-control"" id=""dataY"" placeholder=""y"">
                                <span class=""input-group-append"">
                                    <span class=""input-group-text"">px</span>
                                </span>
                            </div>
                            <div class=""input-group input-group-sm mt-2"">
                                <span class=""input-group-prepend"">
  ");
            WriteLiteral(@"                                  <label class=""input-group-text"" for=""dataWidth"">Width</label>
                                </span>
                                <input type=""text"" class=""form-control"" id=""dataWidth"" placeholder=""width"">
                                <span class=""input-group-append"">
                                    <span class=""input-group-text"">px</span>
                                </span>
                            </div>
                            <div class=""input-group input-group-sm mt-2"">
                                <span class=""input-group-prepend"">
                                    <label class=""input-group-text"" for=""dataHeight"">Height</label>
                                </span>
                                <input type=""text"" class=""form-control"" id=""dataHeight"" placeholder=""height"">
                                <span class=""input-group-append"">
                                    <span class=""input-group-text"">px</span>
              ");
            WriteLiteral(@"                  </span>
                            </div>
                            <div class=""input-group input-group-sm mt-2"">
                                <span class=""input-group-prepend"">
                                    <label class=""input-group-text"" for=""dataRotate"">Rotate</label>
                                </span>
                                <input type=""text"" class=""form-control"" id=""dataRotate"" placeholder=""rotate"">
                                <span class=""input-group-append"">
                                    <span class=""input-group-text"">deg</span>
                                </span>
                            </div>
                            <div class=""input-group input-group-sm mt-2"">
                                <span class=""input-group-prepend"">
                                    <label class=""input-group-text"" for=""dataScaleX"">ScaleX</label>
                                </span>
                                <input type=""text"" class=");
            WriteLiteral(@"""form-control"" id=""dataScaleX"" placeholder=""scaleX"">
                            </div>
                            <div class=""input-group input-group-sm mt-2 mb-2"">
                                <span class=""input-group-prepend"">
                                    <label class=""input-group-text"" for=""dataScaleY"">ScaleY</label>
                                </span>
                                <input type=""text"" class=""form-control"" id=""dataScaleY"" placeholder=""scaleY"">
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""row"" id=""actions"">
                    <div class=""col-xl-9 img-crop-preview-btns docs-buttons"">
                        <!-- <h3>Toolbar:</h3> -->
                        <div class=""button-items mt-2"">
                            <div class=""btn-group"">
                                <button type=""button"" class=""btn btn-primary"" data-method=""setDragMode"" data-option=""move"" t");
            WriteLiteral(@"itle=""Move"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.setDragMode(&quot;move&quot;)"">
                                        <span class=""mdi mdi-arrow-all""></span>
                                    </span>
                                </button>
                                <button type=""button"" class=""btn btn-primary"" data-method=""setDragMode"" data-option=""crop"" title=""Crop"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.setDragMode(&quot;crop&quot;)"">
                                        <span class=""mdi mdi-crop""></span>
                                    </span>
                                </button>
                            </div>

                            <div class=""btn-group"">
                                <button type=""button"" class=""btn btn-primary"" data-method=""zoom"" data-option=""0.1"" title=""Zoom In"">
                                    <span class=""");
            WriteLiteral(@"docs-tooltip"" data-toggle=""tooltip"" title=""cropper.zoom(0.1)"">
                                        <span class=""mdi mdi-magnify-plus-outline""></span>
                                    </span>
                                </button>
                                <button type=""button"" class=""btn btn-primary"" data-method=""zoom"" data-option=""-0.1"" title=""Zoom Out"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.zoom(-0.1)"">
                                        <span class=""mdi mdi-magnify-minus-outline""></span>
                                    </span>
                                </button>
                            </div>

                            <div class=""btn-group"">
                                <button type=""button"" class=""btn btn-primary"" data-method=""move"" data-option=""-10"" data-second-option=""0"" title=""Move Left"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.m");
            WriteLiteral(@"ove(-10, 0)"">
                                        <span class=""mdi mdi-arrow-left""></span>
                                    </span>
                                </button>
                                <button type=""button"" class=""btn btn-primary"" data-method=""move"" data-option=""10"" data-second-option=""0"" title=""Move Right"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.move(10, 0)"">
                                        <span class=""mdi mdi-arrow-right""></span>
                                    </span>
                                </button>
                                <button type=""button"" class=""btn btn-primary"" data-method=""move"" data-option=""0"" data-second-option=""-10"" title=""Move Up"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.move(0, -10)"">
                                        <span class=""mdi mdi-arrow-up""></span>
                                    </span>");
            WriteLiteral(@"
                                </button>
                                <button type=""button"" class=""btn btn-primary"" data-method=""move"" data-option=""0"" data-second-option=""10"" title=""Move Down"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.move(0, 10)"">
                                        <span class=""mdi mdi-arrow-down""></span>
                                    </span>
                                </button>
                            </div>

                            <div class=""btn-group"">
                                <button type=""button"" class=""btn btn-primary"" data-method=""rotate"" data-option=""-45"" title=""Rotate Left"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.rotate(-45)"">
                                        <span class=""mdi mdi-rotate-left""></span>
                                    </span>
                                </button>
                     ");
            WriteLiteral(@"           <button type=""button"" class=""btn btn-primary"" data-method=""rotate"" data-option=""45"" title=""Rotate Right"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.rotate(45)"">
                                        <span class=""mdi mdi-rotate-right""></span>
                                    </span>
                                </button>
                            </div>

                            <div class=""btn-group"">
                                <button type=""button"" class=""btn btn-primary"" data-method=""scaleX"" data-option=""-1"" title=""Flip Horizontal"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.scaleX(-1)"">
                                        <span class=""mdi mdi-arrow-left-right""></span>
                                    </span>
                                </button>
                                <button type=""button"" class=""btn btn-primary"" data-method=""scaleY");
            WriteLiteral(@""" data-option=""-1"" title=""Flip Vertical"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.scaleY(-1)"">
                                        <span class=""mdi mdi-arrow-up-down""></span>
                                    </span>
                                </button>
                            </div>

                            <div class=""btn-group"">
                                <button type=""button"" class=""btn btn-primary"" data-method=""crop"" title=""Crop"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.crop()"">
                                        <span class=""mdi mdi-check""></span>
                                    </span>
                                </button>
                                <button type=""button"" class=""btn btn-primary"" data-method=""clear"" title=""Clear"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.cl");
            WriteLiteral(@"ear()"">
                                        <span class=""mdi mdi-close""></span>
                                    </span>
                                </button>
                            </div>

                            <div class=""btn-group"">
                                <button type=""button"" class=""btn btn-primary"" data-method=""disable"" title=""Disable"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.disable()"">
                                        <span class=""mdi mdi-lock""></span>
                                    </span>
                                </button>
                                <button type=""button"" class=""btn btn-primary"" data-method=""enable"" title=""Enable"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.enable()"">
                                        <span class=""mdi mdi-lock-open""></span>
                                    </span>
          ");
            WriteLiteral(@"                      </button>
                            </div>

                            <div class=""btn-group"">
                                <button type=""button"" class=""btn btn-primary"" data-method=""reset"" title=""Reset"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.reset()"">
                                        <span class=""mdi mdi-sync""></span>
                                    </span>
                                </button>
                                <label class=""btn btn-primary btn-upload"" for=""inputImage"" title=""Upload image file"">
                                    <input type=""file"" class=""sr-only"" id=""inputImage"" name=""file"" accept=""image/*"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""Import image with Blob URLs"">
                                        <span class=""mdi mdi-upload""></span>
                                    </span>
                            ");
            WriteLiteral(@"    </label>
                                <button type=""button"" class=""btn btn-primary"" data-method=""destroy"" title=""Destroy"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.destroy()"">
                                        <span class=""mdi mdi-power""></span>
                                    </span>
                                </button>
                            </div>

                            <div class=""btn-group btn-group-crop"">
                                <button type=""button"" class=""btn btn-success"" data-method=""getCroppedCanvas"" data-option=""{ &quot;maxWidth&quot;: 4096, &quot;maxHeight&quot;: 4096 }"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.getCroppedCanvas({ maxWidth: 4096, maxHeight: 4096 })"">
                                        Get Cropped Canvas
                                    </span>
                                </button>
                  ");
            WriteLiteral(@"              <button type=""button"" class=""btn btn-success"" data-method=""getCroppedCanvas"" data-option=""{ &quot;width&quot;: 160, &quot;height&quot;: 90 }"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.getCroppedCanvas({ width: 160, height: 90 })"">
                                        160&times;90
                                    </span>
                                </button>
                                <button type=""button"" class=""btn btn-success"" data-method=""getCroppedCanvas"" data-option=""{ &quot;width&quot;: 320, &quot;height&quot;: 180 }"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.getCroppedCanvas({ width: 320, height: 180 })"">
                                        320&times;180
                                    </span>
                                </button>
                            </div>

                            <!-- Show the cropped image in modal -->");
            WriteLiteral(@"
                            <div class=""modal fade docs-cropped"" id=""getCroppedCanvasModal"" role=""dialog"" aria-hidden=""true"" aria-labelledby=""getCroppedCanvasTitle"" tabindex=""-1"">
                                <div class=""modal-dialog"">
                                    <div class=""modal-content"">
                                        <div class=""modal-header"">
                                            <h5 class=""modal-title mt-0"" id=""getCroppedCanvasTitle"">Cropped</h5>
                                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                                <span aria-hidden=""true"">&times;</span>
                                            </button>
                                        </div>
                                        <div class=""modal-body""></div>
                                        <div class=""modal-footer"">
                                            <button type=""button"" class=""btn btn-");
            WriteLiteral(@"secondary"" data-dismiss=""modal"">Close</button>
                                            <a class=""btn btn-primary"" id=""download"" href=""javascript:void(0);"" download=""cropped.jpg"">Download</a>
                                        </div>
                                    </div>
                                </div>
                            </div><!-- /.modal -->

                            <button type=""button"" class=""btn btn-secondary"" data-method=""getData"" data-option data-target=""#putData"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.getData()"">
                                    Get Data
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""setData"" data-target=""#putData"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.setData(data)"">
                                   ");
            WriteLiteral(@" Set Data
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""getContainerData"" data-option data-target=""#putData"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.getContainerData()"">
                                    Get Container Data
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""getImageData"" data-option data-target=""#putData"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.getImageData()"">
                                    Get Image Data
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""getCanvasData"" data-option data-target=""#putData"">
        ");
            WriteLiteral(@"                        <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.getCanvasData()"">
                                    Get Canvas Data
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""setCanvasData"" data-target=""#putData"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.setCanvasData(data)"">
                                    Set Canvas Data
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""getCropBoxData"" data-option data-target=""#putData"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.getCropBoxData()"">
                                    Get Crop Box Data
                                </span>
                            </button>
          ");
            WriteLiteral(@"                  <button type=""button"" class=""btn btn-secondary"" data-method=""setCropBoxData"" data-target=""#putData"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.setCropBoxData(data)"">
                                    Set Crop Box Data
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""moveTo"" data-option=""0"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.moveTo(0)"">
                                    Move to [0,0]
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""zoomTo"" data-option=""1"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.zoomTo(1)"">
                                    Zoom to 100%
                    ");
            WriteLiteral(@"            </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""rotateTo"" data-option=""180"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.rotateTo(180)"">
                                    Rotate 180°
                                </span>
                            </button>
                            <button type=""button"" class=""btn btn-secondary"" data-method=""scale"" data-option=""-2"" data-second-option=""-1"">
                                <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""cropper.scale(-2, -1)"">
                                    Scale (-2, -1)
                                </span>
                            </button>
                        </div>
                        <div class=""mt-3"">
                            <textarea class=""form-control"" id=""putData"" rows=""2"" placeholder=""Get data to here or set data with this value""></t");
            WriteLiteral(@"extarea>
                        </div>

                    </div><!-- /.docs-buttons -->

                    <div class=""col-xl-3 docs-toggles"">
                        <div class=""img-crop-preview-toggles mt-4 mt-xl-2"">
                            <!-- <h3>Toggles:</h3> -->
                            <div class=""btn-group d-flex flex-nowrap"" data-toggle=""buttons"">
                                <label class=""btn btn-primary active"">
                                    <input type=""radio"" class=""sr-only"" id=""aspectRatio1"" name=""aspectRatio"" value=""1.7777777777777777"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""aspectRatio: 16 / 9"">
                                        16:9
                                    </span>
                                </label>
                                <label class=""btn btn-primary"">
                                    <input type=""radio"" class=""sr-only"" id=""aspectRatio2"" name=""aspectRatio"" value=""1.33");
            WriteLiteral(@"33333333333333"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""aspectRatio: 4 / 3"">
                                        4:3
                                    </span>
                                </label>
                                <label class=""btn btn-primary"">
                                    <input type=""radio"" class=""sr-only"" id=""aspectRatio3"" name=""aspectRatio"" value=""1"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""aspectRatio: 1 / 1"">
                                        1:1
                                    </span>
                                </label>
                                <label class=""btn btn-primary"">
                                    <input type=""radio"" class=""sr-only"" id=""aspectRatio4"" name=""aspectRatio"" value=""0.6666666666666666"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""aspectRatio: 2 / 3"">
           ");
            WriteLiteral(@"                             2:3
                                    </span>
                                </label>
                                <label class=""btn btn-primary"">
                                    <input type=""radio"" class=""sr-only"" id=""aspectRatio5"" name=""aspectRatio"" value=""NaN"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""aspectRatio: NaN"">
                                        Free
                                    </span>
                                </label>
                            </div>

                            <div class=""btn-group d-flex flex-nowrap"" data-toggle=""buttons"">
                                <label class=""btn btn-primary active"">
                                    <input type=""radio"" class=""sr-only"" id=""viewMode0"" name=""viewMode"" value=""0"" checked>
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""View Mode 0"">
                                    ");
            WriteLiteral(@"    VM0
                                    </span>
                                </label>
                                <label class=""btn btn-primary"">
                                    <input type=""radio"" class=""sr-only"" id=""viewMode1"" name=""viewMode"" value=""1"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""View Mode 1"">
                                        VM1
                                    </span>
                                </label>
                                <label class=""btn btn-primary"">
                                    <input type=""radio"" class=""sr-only"" id=""viewMode2"" name=""viewMode"" value=""2"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""View Mode 2"">
                                        VM2
                                    </span>
                                </label>
                                <label class=""btn btn-primary"">
                         ");
            WriteLiteral(@"           <input type=""radio"" class=""sr-only"" id=""viewMode3"" name=""viewMode"" value=""3"">
                                    <span class=""docs-tooltip"" data-toggle=""tooltip"" title=""View Mode 3"">
                                        VM3
                                    </span>
                                </label>
                            </div>

                            <div class=""dropdown dropup docs-options"">
                                <button type=""button"" class=""btn btn-primary btn-block dropdown-toggle"" id=""toggleOptions"" data-toggle=""dropdown"" aria-expanded=""true"">
                                    Toggle Options
                                    <i class=""mdi mdi-chevron-down ml-1""></i>
                                </button>
                                <ul class=""dropdown-menu"" role=""menu"" aria-labelledby=""toggleOptions"">
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
        ");
            WriteLiteral(@"                                    <input class=""form-check-input"" id=""responsive"" type=""checkbox"" name=""responsive"" checked>
                                            <label class=""form-check-label"" for=""responsive"">responsive</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""restore"" type=""checkbox"" name=""restore"" checked>
                                            <label class=""form-check-label"" for=""restore"">restore</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""checkCrossOrigin"" type=""");
            WriteLiteral(@"checkbox"" name=""checkCrossOrigin"" checked>
                                            <label class=""form-check-label"" for=""checkCrossOrigin"">checkCrossOrigin</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""checkOrientation"" type=""checkbox"" name=""checkOrientation"" checked>
                                            <label class=""form-check-label"" for=""checkOrientation"">checkOrientation</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""modal"" type=""checkbox"" name=""modal"" checked>
              ");
            WriteLiteral(@"                              <label class=""form-check-label"" for=""modal"">modal</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""guides"" type=""checkbox"" name=""guides"" checked>
                                            <label class=""form-check-label"" for=""guides"">guides</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""center"" type=""checkbox"" name=""center"" checked>
                                            <label class=""form-check-label"" for=""center"">center</label>
                           ");
            WriteLiteral(@"             </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""highlight"" type=""checkbox"" name=""highlight"" checked>
                                            <label class=""form-check-label"" for=""highlight"">highlight</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""background"" type=""checkbox"" name=""background"" checked>
                                            <label class=""form-check-label"" for=""background"">background</label>
                                        </div>
                                    </li>
                        ");
            WriteLiteral(@"            <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""autoCrop"" type=""checkbox"" name=""autoCrop"" checked>
                                            <label class=""form-check-label"" for=""autoCrop"">autoCrop</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""movable"" type=""checkbox"" name=""movable"" checked>
                                            <label class=""form-check-label"" for=""movable"">movable</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">");
            WriteLiteral(@"
                                            <input class=""form-check-input"" id=""rotatable"" type=""checkbox"" name=""rotatable"" checked>
                                            <label class=""form-check-label"" for=""rotatable"">rotatable</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""scalable"" type=""checkbox"" name=""scalable"" checked>
                                            <label class=""form-check-label"" for=""scalable"">scalable</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""zoomable"" type");
            WriteLiteral(@"=""checkbox"" name=""zoomable"" checked>
                                            <label class=""form-check-label"" for=""zoomable"">zoomable</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""zoomOnTouch"" type=""checkbox"" name=""zoomOnTouch"" checked>
                                            <label class=""form-check-label"" for=""zoomOnTouch"">zoomOnTouch</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""zoomOnWheel"" type=""checkbox"" name=""zoomOnWheel"" checked>
                                            ");
            WriteLiteral(@"<label class=""form-check-label"" for=""zoomOnWheel"">zoomOnWheel</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""cropBoxMovable"" type=""checkbox"" name=""cropBoxMovable"" checked>
                                            <label class=""form-check-label"" for=""cropBoxMovable"">cropBoxMovable</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""cropBoxResizable"" type=""checkbox"" name=""cropBoxResizable"" checked>
                                            <label class=""form-check-label"" for=""cropBoxResizable""");
            WriteLiteral(@">cropBoxResizable</label>
                                        </div>
                                    </li>
                                    <li class=""dropdown-item"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" id=""toggleDragModeOnDblclick"" type=""checkbox"" name=""toggleDragModeOnDblclick"" checked>
                                            <label class=""form-check-label"" for=""toggleDragModeOnDblclick"">toggleDragModeOnDblclick</label>
                                        </div>
                                    </li>
                                </ul>
                            </div><!-- /.dropdown -->
                        </div>

                    </div><!-- /.docs-toggles -->
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end row -->
<!-- JAVASCRIPT -->
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399448658", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399449698", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399450738", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399451778", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399452818", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399453858", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399454902", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- cropperjs init -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399455974", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01875973fad66c3ae1fed3122d94cb2a4d93399457019", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
