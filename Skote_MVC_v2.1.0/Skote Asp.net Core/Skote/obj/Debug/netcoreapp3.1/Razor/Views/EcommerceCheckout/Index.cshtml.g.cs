#pragma checksum "C:\Users\Palagar\Desktop\themeforest-4i6WPWNG-skote-aspnet-mvc5\Skote_MVC_v2.1.0\Skote Asp.net Core\Skote\Views\EcommerceCheckout\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_EcommerceCheckout_Index), @"mvc.1.0.view", @"/Views/EcommerceCheckout/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b16a2a8ea9c6686ed7fae95639a2036c84ff4ef4", @"/Views/EcommerceCheckout/Index.cshtml")]
    public class Views_EcommerceCheckout_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/select2/css/select2.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/images/product/img-1.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("product-img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("product-img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/images/product/img-7.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/metismenu/metisMenu.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/simplebar/simplebar.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/node-waves/waves.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/lang/jquery.multiLanguage.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/select2/js/select2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/pages/ecommerce-select2.init.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/app.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Palagar\Desktop\themeforest-4i6WPWNG-skote-aspnet-mvc5\Skote_MVC_v2.1.0\Skote Asp.net Core\Skote\Views\EcommerceCheckout\Index.cshtml"
  
    ViewBag.Title = "Checkout";
    ViewBag.pTitle = "Checkout";
    ViewBag.pageTitle = "Ecommerce";
    Layout = "~/Views/_Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef49315", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"



<div class=""checkout-tabs"">
    <div class=""row"">
        <div class=""col-xl-2 col-sm-3"">
            <div class=""nav flex-column nav-pills"" id=""v-pills-tab"" role=""tablist"" aria-orientation=""vertical"">
                <a class=""nav-link active"" id=""v-pills-shipping-tab"" data-toggle=""pill"" href=""#v-pills-shipping"" role=""tab"" aria-controls=""v-pills-shipping"" aria-selected=""true"">
                    <i class=""bx bxs-truck d-block check-nav-icon mt-4 mb-2""></i>
                    <p class=""font-weight-bold mb-4"">Shipping Info</p>
                </a>
                <a class=""nav-link"" id=""v-pills-payment-tab"" data-toggle=""pill"" href=""#v-pills-payment"" role=""tab"" aria-controls=""v-pills-payment"" aria-selected=""false"">
                    <i class=""bx bx-money d-block check-nav-icon mt-4 mb-2""></i>
                    <p class=""font-weight-bold mb-4"">Payment Info</p>
                </a>
                <a class=""nav-link"" id=""v-pills-confir-tab"" data-toggle=""pill"" href=""#v-pills-confir"" role=");
            WriteLiteral(@"""tab"" aria-controls=""v-pills-confir"" aria-selected=""false"">
                    <i class=""bx bx-badge-check d-block check-nav-icon mt-4 mb-2""></i>
                    <p class=""font-weight-bold mb-4"">Confirmation</p>
                </a>
            </div>
        </div>
        <div class=""col-xl-10 col-sm-9"">
            <div class=""card"">
                <div class=""card-body"">
                    <div class=""tab-content"" id=""v-pills-tabContent"">
                        <div class=""tab-pane fade show active"" id=""v-pills-shipping"" role=""tabpanel"" aria-labelledby=""v-pills-shipping-tab"">
                            <div>
                                <h4 class=""card-title"">Shipping information</h4>
                                <p class=""card-title-desc"">Fill all information below</p>
                                <form>
                                    <div class=""form-group row mb-4"">
                                        <label for=""billing-name"" class=""col-md-2 col-form-label"">N");
            WriteLiteral(@"ame</label>
                                        <div class=""col-md-10"">
                                            <input type=""text"" class=""form-control"" id=""billing-name"" placeholder=""Enter your name"">
                                        </div>
                                    </div>
                                    <div class=""form-group row mb-4"">
                                        <label for=""billing-email-address"" class=""col-md-2 col-form-label"">Email Address</label>
                                        <div class=""col-md-10"">
                                            <input type=""email"" class=""form-control"" id=""billing-email-address"" placeholder=""Enter your email"">
                                        </div>
                                    </div>
                                    <div class=""form-group row mb-4"">
                                        <label for=""billing-phone"" class=""col-md-2 col-form-label"">Phone</label>
                                ");
            WriteLiteral(@"        <div class=""col-md-10"">
                                            <input type=""text"" class=""form-control"" id=""billing-phone"" placeholder=""Enter your Phone no."">
                                        </div>
                                    </div>
                                    <div class=""form-group row mb-4"">
                                        <label for=""billing-address"" class=""col-md-2 col-form-label"">Address</label>
                                        <div class=""col-md-10"">
                                            <textarea class=""form-control"" id=""billing-address"" rows=""3"" placeholder=""Enter full address""></textarea>
                                        </div>
                                    </div>
                                    <div class=""form-group row mb-4"">
                                        <label class=""col-md-2 col-form-label"">Country</label>
                                        <div class=""col-md-10"">
                              ");
            WriteLiteral(@"              <select class=""form-control select2"" title=""Country"">
                                                <option value=""0"">Select Country</option>
                                                <option value=""AF"">Afghanistan</option>
                                                <option value=""AL"">Albania</option>
                                                <option value=""DZ"">Algeria</option>
                                                <option value=""AS"">American Samoa</option>
                                                <option value=""AD"">Andorra</option>
                                                <option value=""AO"">Angola</option>
                                                <option value=""AI"">Anguilla</option>
                                                <option value=""AQ"">Antarctica</option>
                                                <option value=""AR"">Argentina</option>
                                                <option value=""AM"">Armenia</option>");
            WriteLiteral(@"
                                                <option value=""AW"">Aruba</option>
                                                <option value=""AU"">Australia</option>
                                                <option value=""AT"">Austria</option>
                                                <option value=""AZ"">Azerbaijan</option>
                                                <option value=""BS"">Bahamas</option>
                                                <option value=""BH"">Bahrain</option>
                                                <option value=""BD"">Bangladesh</option>
                                                <option value=""BB"">Barbados</option>
                                                <option value=""BY"">Belarus</option>
                                                <option value=""BE"">Belgium</option>
                                                <option value=""BZ"">Belize</option>
                                                <option value=""BJ"">Benin</option>");
            WriteLiteral(@"
                                                <option value=""BM"">Bermuda</option>
                                                <option value=""BT"">Bhutan</option>
                                                <option value=""BO"">Bolivia</option>
                                                <option value=""BW"">Botswana</option>
                                                <option value=""BV"">Bouvet Island</option>
                                                <option value=""BR"">Brazil</option>
                                                <option value=""BN"">Brunei Darussalam</option>
                                                <option value=""BG"">Bulgaria</option>
                                                <option value=""BF"">Burkina Faso</option>
                                                <option value=""BI"">Burundi</option>
                                                <option value=""KH"">Cambodia</option>
                                                <option value=""CM");
            WriteLiteral(@""">Cameroon</option>
                                                <option value=""CA"">Canada</option>
                                                <option value=""CV"">Cape Verde</option>
                                                <option value=""KY"">Cayman Islands</option>
                                                <option value=""CF"">Central African Republic</option>
                                                <option value=""TD"">Chad</option>
                                                <option value=""CL"">Chile</option>
                                                <option value=""CN"">China</option>
                                                <option value=""CX"">Christmas Island</option>
                                                <option value=""CC"">Cocos (Keeling) Islands</option>
                                                <option value=""CO"">Colombia</option>
                                                <option value=""KM"">Comoros</option>
                       ");
            WriteLiteral(@"                         <option value=""CG"">Congo</option>
                                                <option value=""CK"">Cook Islands</option>
                                                <option value=""CR"">Costa Rica</option>
                                                <option value=""CI"">Cote d'Ivoire</option>
                                                <option value=""HR"">Croatia (Hrvatska)</option>
                                                <option value=""CU"">Cuba</option>
                                                <option value=""CY"">Cyprus</option>
                                                <option value=""CZ"">Czech Republic</option>
                                                <option value=""DK"">Denmark</option>
                                                <option value=""DJ"">Djibouti</option>
                                                <option value=""DM"">Dominica</option>
                                                <option value=""DO"">Dominican Republi");
            WriteLiteral(@"c</option>
                                                <option value=""EC"">Ecuador</option>
                                                <option value=""EG"">Egypt</option>
                                                <option value=""SV"">El Salvador</option>
                                                <option value=""GQ"">Equatorial Guinea</option>
                                                <option value=""ER"">Eritrea</option>
                                                <option value=""EE"">Estonia</option>
                                                <option value=""ET"">Ethiopia</option>
                                                <option value=""FK"">Falkland Islands (Malvinas)</option>
                                                <option value=""FO"">Faroe Islands</option>
                                                <option value=""FJ"">Fiji</option>
                                                <option value=""FI"">Finland</option>
                                         ");
            WriteLiteral(@"       <option value=""FR"">France</option>
                                                <option value=""GF"">French Guiana</option>
                                                <option value=""PF"">French Polynesia</option>
                                                <option value=""GA"">Gabon</option>
                                                <option value=""GM"">Gambia</option>
                                                <option value=""GE"">Georgia</option>
                                                <option value=""DE"">Germany</option>
                                                <option value=""GH"">Ghana</option>
                                                <option value=""GI"">Gibraltar</option>
                                                <option value=""GR"">Greece</option>
                                                <option value=""GL"">Greenland</option>
                                                <option value=""GD"">Grenada</option>
                                 ");
            WriteLiteral(@"               <option value=""GP"">Guadeloupe</option>
                                                <option value=""GU"">Guam</option>
                                                <option value=""GT"">Guatemala</option>
                                                <option value=""GN"">Guinea</option>
                                                <option value=""GW"">Guinea-Bissau</option>
                                                <option value=""GY"">Guyana</option>
                                                <option value=""HT"">Haiti</option>
                                                <option value=""HN"">Honduras</option>
                                                <option value=""HK"">Hong Kong</option>
                                                <option value=""HU"">Hungary</option>
                                                <option value=""IS"">Iceland</option>
                                                <option value=""IN"">India</option>
                                ");
            WriteLiteral(@"                <option value=""ID"">Indonesia</option>
                                                <option value=""IQ"">Iraq</option>
                                                <option value=""IE"">Ireland</option>
                                                <option value=""IL"">Israel</option>
                                                <option value=""IT"">Italy</option>
                                                <option value=""JM"">Jamaica</option>
                                                <option value=""JP"">Japan</option>
                                                <option value=""JO"">Jordan</option>
                                                <option value=""KZ"">Kazakhstan</option>
                                                <option value=""KE"">Kenya</option>
                                                <option value=""KI"">Kiribati</option>
                                                <option value=""KR"">Korea, Republic of</option>
                              ");
            WriteLiteral(@"                  <option value=""KW"">Kuwait</option>
                                                <option value=""KG"">Kyrgyzstan</option>
                                                <option value=""LV"">Latvia</option>
                                                <option value=""LB"">Lebanon</option>
                                                <option value=""LS"">Lesotho</option>
                                                <option value=""LR"">Liberia</option>
                                                <option value=""LY"">Libyan Arab Jamahiriya</option>
                                                <option value=""LI"">Liechtenstein</option>
                                                <option value=""LT"">Lithuania</option>
                                                <option value=""LU"">Luxembourg</option>
                                                <option value=""MO"">Macau</option>
                                                <option value=""MG"">Madagascar</option>
      ");
            WriteLiteral(@"                                          <option value=""MW"">Malawi</option>
                                                <option value=""MY"">Malaysia</option>
                                                <option value=""MV"">Maldives</option>
                                                <option value=""ML"">Mali</option>
                                                <option value=""MT"">Malta</option>
                                                <option value=""MH"">Marshall Islands</option>
                                                <option value=""MQ"">Martinique</option>
                                                <option value=""MR"">Mauritania</option>
                                                <option value=""MU"">Mauritius</option>
                                                <option value=""YT"">Mayotte</option>
                                                <option value=""MX"">Mexico</option>
                                                <option value=""MD"">Moldova, Republi");
            WriteLiteral(@"c of</option>
                                                <option value=""MC"">Monaco</option>
                                                <option value=""MN"">Mongolia</option>
                                                <option value=""MS"">Montserrat</option>
                                                <option value=""MA"">Morocco</option>
                                                <option value=""MZ"">Mozambique</option>
                                                <option value=""MM"">Myanmar</option>
                                                <option value=""NA"">Namibia</option>
                                                <option value=""NR"">Nauru</option>
                                                <option value=""NP"">Nepal</option>
                                                <option value=""NL"">Netherlands</option>
                                                <option value=""AN"">Netherlands Antilles</option>
                                                <option");
            WriteLiteral(@" value=""NC"">New Caledonia</option>
                                                <option value=""NZ"">New Zealand</option>
                                                <option value=""NI"">Nicaragua</option>
                                                <option value=""NE"">Niger</option>
                                                <option value=""NG"">Nigeria</option>
                                                <option value=""NU"">Niue</option>
                                                <option value=""NF"">Norfolk Island</option>
                                                <option value=""MP"">Northern Mariana Islands</option>
                                                <option value=""NO"">Norway</option>
                                                <option value=""OM"">Oman</option>
                                                <option value=""PW"">Palau</option>
                                                <option value=""PA"">Panama</option>
                                   ");
            WriteLiteral(@"             <option value=""PG"">Papua New Guinea</option>
                                                <option value=""PY"">Paraguay</option>
                                                <option value=""PE"">Peru</option>
                                                <option value=""PH"">Philippines</option>
                                                <option value=""PN"">Pitcairn</option>
                                                <option value=""PL"">Poland</option>
                                                <option value=""PT"">Portugal</option>
                                                <option value=""PR"">Puerto Rico</option>
                                                <option value=""QA"">Qatar</option>
                                                <option value=""RE"">Reunion</option>
                                                <option value=""RO"">Romania</option>
                                                <option value=""RU"">Russian Federation</option>
              ");
            WriteLiteral(@"                                  <option value=""RW"">Rwanda</option>
                                                <option value=""KN"">Saint Kitts and Nevis</option>
                                                <option value=""LC"">Saint LUCIA</option>
                                                <option value=""WS"">Samoa</option>
                                                <option value=""SM"">San Marino</option>
                                                <option value=""ST"">Sao Tome and Principe</option>
                                                <option value=""SA"">Saudi Arabia</option>
                                                <option value=""SN"">Senegal</option>
                                                <option value=""SC"">Seychelles</option>
                                                <option value=""SL"">Sierra Leone</option>
                                                <option value=""SG"">Singapore</option>
                                                <option ");
            WriteLiteral(@"value=""SK"">Slovakia (Slovak Republic)</option>
                                                <option value=""SI"">Slovenia</option>
                                                <option value=""SB"">Solomon Islands</option>
                                                <option value=""SO"">Somalia</option>
                                                <option value=""ZA"">South Africa</option>
                                                <option value=""ES"">Spain</option>
                                                <option value=""LK"">Sri Lanka</option>
                                                <option value=""SH"">St. Helena</option>
                                                <option value=""PM"">St. Pierre and Miquelon</option>
                                                <option value=""SD"">Sudan</option>
                                                <option value=""SR"">Suriname</option>
                                                <option value=""SZ"">Swaziland</option>
       ");
            WriteLiteral(@"                                         <option value=""SE"">Sweden</option>
                                                <option value=""CH"">Switzerland</option>
                                                <option value=""SY"">Syrian Arab Republic</option>
                                                <option value=""TW"">Taiwan, Province of China</option>
                                                <option value=""TJ"">Tajikistan</option>
                                                <option value=""TZ"">Tanzania, United Republic of</option>
                                                <option value=""TH"">Thailand</option>
                                                <option value=""TG"">Togo</option>
                                                <option value=""TK"">Tokelau</option>
                                                <option value=""TO"">Tonga</option>
                                                <option value=""TT"">Trinidad and Tobago</option>
                              ");
            WriteLiteral(@"                  <option value=""TN"">Tunisia</option>
                                                <option value=""TR"">Turkey</option>
                                                <option value=""TM"">Turkmenistan</option>
                                                <option value=""TC"">Turks and Caicos Islands</option>
                                                <option value=""TV"">Tuvalu</option>
                                                <option value=""UG"">Uganda</option>
                                                <option value=""UA"">Ukraine</option>
                                                <option value=""AE"">United Arab Emirates</option>
                                                <option value=""GB"">United Kingdom</option>
                                                <option value=""US"">United States</option>
                                                <option value=""UY"">Uruguay</option>
                                                <option value=""UZ"">Uzbekis");
            WriteLiteral(@"tan</option>
                                                <option value=""VU"">Vanuatu</option>
                                                <option value=""VE"">Venezuela</option>
                                                <option value=""VN"">Viet Nam</option>
                                                <option value=""VG"">Virgin Islands (British)</option>
                                                <option value=""VI"">Virgin Islands (U.S.)</option>
                                                <option value=""WF"">Wallis and Futuna Islands</option>
                                                <option value=""EH"">Western Sahara</option>
                                                <option value=""YE"">Yemen</option>
                                                <option value=""ZM"">Zambia</option>
                                                <option value=""ZW"">Zimbabwe</option>
                                            </select>
                                        </div>
");
            WriteLiteral(@"                                    </div>

                                    <div class=""form-group row mb-4"">
                                        <label class=""col-md-2 col-form-label"">States</label>
                                        <div class=""col-md-10"">
                                            <select class=""form-control select2"" title=""Country"">
                                                <option value=""0"">Select States</option>
                                                <option value=""AL"">Alabama</option>
                                                <option value=""AK"">Alaska</option>
                                                <option value=""AZ"">Arizona</option>
                                                <option value=""AR"">Arkansas</option>
                                                <option value=""CA"">California</option>
                                                <option value=""CO"">Colorado</option>
                                            ");
            WriteLiteral(@"    <option value=""DE"">Delaware</option>
                                                <option value=""Fl""> Florida</option>
                                                <option value=""GA"">Georgia</option>
                                                <option value=""HI"">Hawaii</option>
                                                <option value=""MT"">Montana</option>
                                                <option value=""NV"">Nevada</option>
                                                <option value=""NM"">New Mexico</option>
                                                <option value=""NY"">New York</option>
                                                <option value=""NC"">North Dakota</option>
                                                <option value=""TX"">Texas</option>
                                                <option value=""VA"">Virginia</option>
                                                <option value=""WI"">Wisconsin</option>
                                      ");
            WriteLiteral(@"          <option value=""WY"">Wyoming</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""form-group row mb-0"">
                                        <label for=""example-textarea"" class=""col-md-2 col-form-label"">Order Notes:</label>
                                        <div class=""col-md-10"">
                                            <textarea class=""form-control"" id=""example-textarea"" rows=""3"" placeholder=""Write some note..""></textarea>
                                        </div>
                                    </div>

                                </form>
                            </div>
                        </div>
                        <div class=""tab-pane fade"" id=""v-pills-payment"" role=""tabpanel"" aria-labelledby=""v-pills-payment-tab"">
                            <div>
                                <h4 class=""card-title");
            WriteLiteral(@""">Payment information</h4>
                                <p class=""card-title-desc"">Fill all information below</p>

                                <div>

                                    <div class=""custom-control custom-radio custom-control-inline mr-4"">
                                        <input type=""radio"" id=""customRadioInline1"" name=""customRadioInline1"" class=""custom-control-input"">
                                        <label class=""custom-control-label"" for=""customRadioInline1""><i class=""fab fa-cc-mastercard mr-1 font-size-20 align-top""></i> Credit / Debit Card</label>
                                    </div>
                                    <div class=""custom-control custom-radio custom-control-inline mr-4"">
                                        <input type=""radio"" id=""customRadioInline2"" name=""customRadioInline1"" class=""custom-control-input"">
                                        <label class=""custom-control-label"" for=""customRadioInline2""><i class=""fab fa-cc-paypal m");
            WriteLiteral(@"r-1 font-size-20 align-top""></i> Paypal</label>
                                    </div>
                                    <div class=""custom-control custom-radio custom-control-inline mr-4"">
                                        <input type=""radio"" id=""customRadioInline3"" name=""customRadioInline1"" class=""custom-control-input"" checked>
                                        <label class=""custom-control-label"" for=""customRadioInline3""><i class=""far fa-money-bill-alt mr-1 font-size-20 align-top""></i> Cash on Delivery</label>
                                    </div>
                                </div>

                                <h5 class=""mt-5 mb-3 font-size-15"">For card Payment</h5>
                                <div class=""p-4 border"">
                                    <form>
                                        <div class=""form-group mb-0"">
                                            <label for=""cardnumberInput"">Card Number</label>
                                        ");
            WriteLiteral(@"    <input type=""text"" class=""form-control"" id=""cardnumberInput"" placeholder=""0000 0000 0000 0000"">
                                        </div>
                                        <div class=""row"">
                                            <div class=""col-lg-6"">
                                                <div class=""form-group mt-4 mb-0"">
                                                    <label for=""cardnameInput"">Name on card</label>
                                                    <input type=""text"" class=""form-control"" id=""cardnameInput"" placeholder=""Name on Card"">
                                                </div>
                                            </div>
                                            <div class=""col-lg-3"">
                                                <div class=""form-group mt-4 mb-0"">
                                                    <label for=""expirydateInput"">Expiry date</label>
                                                    <input ty");
            WriteLiteral(@"pe=""text"" class=""form-control"" id=""expirydateInput"" placeholder=""MM/YY"">
                                                </div>
                                            </div>
                                            <div class=""col-lg-3"">
                                                <div class=""form-group mt-4 mb-0"">
                                                    <label for=""cvvcodeInput"">CVV Code</label>
                                                    <input type=""text"" class=""form-control"" id=""cvvcodeInput"" placeholder=""Enter CVV Code"">
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class=""tab-pane fade"" id=""v-pills-confir"" role=""tabpanel"" aria-labelledby=""v-pills-confir-tab"">
                  ");
            WriteLiteral(@"          <div class=""card shadow-none border mb-0"">
                                <div class=""card-body"">
                                    <h4 class=""card-title mb-4"">Order Summary</h4>

                                    <div class=""table-responsive"">
                                        <table class=""table table-centered mb-0 table-nowrap"">
                                            <thead class=""thead-light"">
                                                <tr>
                                                    <th scope=""col"">Product</th>
                                                    <th scope=""col"">Product Desc</th>
                                                    <th scope=""col"">Price</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <th scope=""row"">");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef444028", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</th>\r\n                                                    <td>\r\n                                                        <h5 class=\"font-size-14 text-truncate\"><a");
            BeginWriteAttribute("href", " href=\"", 32258, "\"", 32311, 1);
#nullable restore
#line 399 "C:\Users\Palagar\Desktop\themeforest-4i6WPWNG-skote-aspnet-mvc5\Skote_MVC_v2.1.0\Skote Asp.net Core\Skote\Views\EcommerceCheckout\Index.cshtml"
WriteAttributeValue("", 32265, Url.Action("Index", "EcommerceProductDetail"), 32265, 46, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" class=""text-dark"">Half sleeve T-shirt  (64GB) </a></h5>
                                                        <p class=""text-muted mb-0"">$ 450 x 1</p>
                                                    </td>
                                                    <td>$ 450</td>
                                                </tr>
                                                <tr>
                                                    <th scope=""row"">");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef446405", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</th>\r\n                                                    <td>\r\n                                                        <h5 class=\"font-size-14 text-truncate\"><a");
            BeginWriteAttribute("href", " href=\"", 33035, "\"", 33088, 1);
#nullable restore
#line 407 "C:\Users\Palagar\Desktop\themeforest-4i6WPWNG-skote-aspnet-mvc5\Skote_MVC_v2.1.0\Skote Asp.net Core\Skote\Views\EcommerceCheckout\Index.cshtml"
WriteAttributeValue("", 33042, Url.Action("Index", "EcommerceProductDetail"), 33042, 46, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" class=""text-dark"">Wirless Headphone </a></h5>
                                                        <p class=""text-muted mb-0"">$ 225 x 1</p>
                                                    </td>
                                                    <td>$ 225</td>
                                                </tr>
                                                <tr>
                                                    <td colspan=""2"">
                                                        <h6 class=""m-0 text-right"">Sub Total:</h6>
                                                    </td>
                                                    <td>
                                                        $ 675
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td colspan=""3"">
                                                      ");
            WriteLiteral(@"  <div class=""bg-soft-primary p-3 rounded"">
                                                            <h5 class=""font-size-14 text-primary mb-0""><i class=""fas fa-shipping-fast mr-2""></i> Shipping <span class=""float-right"">Free</span></h5>
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td colspan=""2"">
                                                        <h6 class=""m-0 text-right"">Total:</h6>
                                                    </td>
                                                    <td>
                                                        $ 675
                                                    </td>
                                                </tr>
                                            </tbody>
                                   ");
            WriteLiteral(@"     </table>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row mt-4"">
                <div class=""col-sm-6"">
                    <a");
            BeginWriteAttribute("href", " href=\"", 35476, "\"", 35520, 1);
#nullable restore
#line 447 "C:\Users\Palagar\Desktop\themeforest-4i6WPWNG-skote-aspnet-mvc5\Skote_MVC_v2.1.0\Skote Asp.net Core\Skote\Views\EcommerceCheckout\Index.cshtml"
WriteAttributeValue("", 35483, Url.Action("Index", "EcommerceCart"), 35483, 37, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" class=""btn text-muted d-none d-sm-inline-block btn-link"">
                        <i class=""mdi mdi-arrow-left mr-1""></i> Back to Shopping Cart
                    </a>
                </div> <!-- end col -->
                <div class=""col-sm-6"">
                    <div class=""text-sm-right"">
                        <a");
            BeginWriteAttribute("href", " href=\"", 35850, "\"", 35898, 1);
#nullable restore
#line 453 "C:\Users\Palagar\Desktop\themeforest-4i6WPWNG-skote-aspnet-mvc5\Skote_MVC_v2.1.0\Skote Asp.net Core\Skote\Views\EcommerceCheckout\Index.cshtml"
WriteAttributeValue("", 35857, Url.Action("Index", "EcommerceCheckout"), 35857, 41, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" class=""btn btn-success"">
                            <i class=""mdi mdi-truck-fast mr-1""></i> Proceed to Shipping
                        </a>
                    </div>
                </div> <!-- end col -->
            </div> <!-- end row -->
        </div>
    </div>
</div>
<!-- end row -->
<!-- JAVASCRIPT -->
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef452379", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef453419", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef454459", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef455500", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef456541", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef457582", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef458627", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- init js -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef459692", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- App js -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b16a2a8ea9c6686ed7fae95639a2036c84ff4ef460756", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
